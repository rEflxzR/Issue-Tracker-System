[{"/home/reflxzr/Documents/React/bug-tracker/src/index.js":"1","/home/reflxzr/Documents/React/bug-tracker/src/reportWebVitals.js":"2","/home/reflxzr/Documents/React/bug-tracker/src/App.js":"3","/home/reflxzr/Documents/React/bug-tracker/src/Components/Dashboard/userdashboard.js":"4","/home/reflxzr/Documents/React/bug-tracker/src/Components/Landingpage/landingpage.js":"5","/home/reflxzr/Documents/React/bug-tracker/src/Components/Navbars/drawerandnavbar.js":"6","/home/reflxzr/Documents/React/bug-tracker/src/Components/Loginpages/passwordreset.js":"7","/home/reflxzr/Documents/React/bug-tracker/src/Components/Loginpages/loginbox.js":"8","/home/reflxzr/Documents/React/bug-tracker/src/Components/Loginpages/signupbox.js":"9","/home/reflxzr/Documents/React/bug-tracker/src/Components/Authentication/auth.js":"10"},{"size":543,"mtime":1614853463672,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1611993292957,"results":"13","hashOfConfig":"12"},{"size":1206,"mtime":1615215542832,"results":"14","hashOfConfig":"12"},{"size":802,"mtime":1615216463470,"results":"15","hashOfConfig":"12"},{"size":2526,"mtime":1615216158151,"results":"16","hashOfConfig":"12"},{"size":4730,"mtime":1612607272341,"results":"17","hashOfConfig":"12"},{"size":1946,"mtime":1614626397090,"results":"18","hashOfConfig":"12"},{"size":2709,"mtime":1615109665732,"results":"19","hashOfConfig":"12"},{"size":5245,"mtime":1615109644003,"results":"20","hashOfConfig":"12"},{"size":441,"mtime":1615104750471,"results":"21","hashOfConfig":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"us95ny",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"25"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"25"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"25"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"25"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"aqx0zs","/home/reflxzr/Documents/React/bug-tracker/src/index.js",[],["48","49"],"/home/reflxzr/Documents/React/bug-tracker/src/reportWebVitals.js",[],"/home/reflxzr/Documents/React/bug-tracker/src/App.js",["50","51"],"import React, { Component } from 'react'\nimport axios from 'axios'\nimport { Redirect, Route, Switch } from 'react-router-dom'\nimport Landingpage from './Components/Landingpage/landingpage'\nimport Userdashboard from './Components/Dashboard/userdashboard'\nimport './App.css'\n\n\nclass App extends Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tisLoggedIn: false\n\t\t}\n\t}\n\n\t// async componentDidMount() {\n\t// \tconst url = `http://${window.location.hostname}:3000/cookie-session`\n\t// \tconst result = await axios.get(url, {withCredentials: true})\n\t// \tif(result.data==\"Success\") {\n\t// \t\tthis.setState({ isLoggedIn: true })\n\t// \t}\n\t// \tthis.setState({ isLoggedIn: false })\n\t// }\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"landingpage\">\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route exact path=\"/\" component={Landingpage} />\n\t\t\t\t\t<Route exact path=\"/dashboard\" render={(routeProps) => {\n\t\t\t\t\t\treturn <Userdashboard {...routeProps} />\n\t\t\t\t\t}} />\n\t\t\t\t\t{/* <Route exact path=\"/dashboard\" render={(routeProps) => {\n\t\t\t\t\t\tconsole.log(routeProps)\n\t\t\t\t\t\treturn this.state.isLoggedIn ? <Userdashboard {...routeProps} />\n\t\t\t\t\t\t:\n\t\t\t\t\t\t<Redirect path=\"/\" />\n\t\t\t\t\t}} /> */}\n\t\t\t\t</Switch>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default App;","/home/reflxzr/Documents/React/bug-tracker/src/Components/Dashboard/userdashboard.js",["52"],"/home/reflxzr/Documents/React/bug-tracker/src/Components/Landingpage/landingpage.js",["53","54","55"],"import React, { Component } from 'react'\nimport axios from 'axios'\nimport Loginbox from '../Loginpages/loginbox'\nimport Signupbox from '../Loginpages/signupbox'\nimport Passwordreset from '../Loginpages/passwordreset'\nimport Link from '@material-ui/core/Link'\nimport './Landingpage.css'\n\nclass Landingpage extends Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\n\t\tthis.state = {\n\t\t\tcurrentbox: 'login'  // choose from login, signup, resetpassword, demouser\n\t\t}\n\n\t\tthis.linkClickHandler = this.linkClickHandler.bind(this)\n\t\tthis.handleRedirect = this.handleRedirect.bind(this)\n\t}\n\n\tlinkClickHandler(evt) {\n\t\tevt.preventDefault()\n\t\tif(evt.currentTarget.text[0]==='L') {\n\t\t\tthis.setState({ currentbox: 'login' })\n\t\t}\n\t\telse if(evt.currentTarget.text[0]==='C') {\n\t\t\tthis.setState({ currentbox: 'signup' })\n\t\t}\n\t\telse if(evt.currentTarget.text[0]==='F') {\n\t\t\tthis.setState({ currentbox: 'resetpassword' })\n\t\t}\n\t\telse {\n\t\t\tthis.setState({ currentbox: 'demouser' })\n\t\t}\n\t}\n\n\thandleRedirect(page) {\n\t\tif(page==\"home\") {\n\t\t\twindow.location.reload()\n\t\t}\n\t\telse if(page==\"dashboard\") {\n\t\t\tthis.props.history.push(\"/dashboard\")\n\t\t}\n\t}\n\n  \trender() {\n\t\treturn (\n\t\t\t<div className=\"main\">\n\t\t\t\t<div className=\"loginbox\">\n\t\t\t\t\t<h1 className=\"text-center\" id=\"heading\">BUG TRACKER</h1>\n\t\t\t\t\t<div className=\"renderbox\">\n\t\t\t\t\t\t{this.state.currentbox==='login' && <Loginbox redirect={this.handleRedirect} />}\n\t\t\t\t\t\t{this.state.currentbox==='signup' && <Signupbox redirect={this.handleRedirect} />}\n\t\t\t\t\t\t{this.state.currentbox==='resetpassword' && <Passwordreset />}\n\t\t\t\t\t\t{this.state.currentbox==='demouser' && <Loginbox />}\n\t\t\t\t\t</div>\n\n\t\t\t\t\t{ this.state.currentbox!=='login' &&\n\t\t\t\t\t\t<div className=\"auxbuttons\">\n\t\t\t\t\t\t\t<Link href=\"#\" value=\"signup\" onClick={this.linkClickHandler}>Login Using Existing Account</Link>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t}\n\t\t\t\t\t{ this.state.currentbox!=='signup' &&\n\t\t\t\t\t\t<div className=\"auxbuttons\">\n\t\t\t\t\t\t\t<Link href=\"#\" value=\"signup\" onClick={this.linkClickHandler}>Create A New Account</Link>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t}\n\t\t\t\t\t{ this.state.currentbox!=='resetpassword' &&\n\t\t\t\t\t\t<div className=\"auxbuttons\">\n\t\t\t\t\t\t\t<Link href=\"#\" value=\"resetpassword\" onClick={this.linkClickHandler}>Forgot Password ?</Link>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t}\n\t\t\t\t\t{ this.state.currentbox!=='demouser' &&\n\t\t\t\t\t\t<div className=\"auxbuttons\">\n\t\t\t\t\t\t\t<Link href=\"#\" value=\"demouser\" onClick={this.linkClickHandler}>Sign In as Demo User</Link>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"photobox\">\n\t\t\t\t</div>\n\t\t\t</div>\n    \t)\n  \t}\n}\n\nexport default Landingpage","/home/reflxzr/Documents/React/bug-tracker/src/Components/Navbars/drawerandnavbar.js",[],"/home/reflxzr/Documents/React/bug-tracker/src/Components/Loginpages/passwordreset.js",[],"/home/reflxzr/Documents/React/bug-tracker/src/Components/Loginpages/loginbox.js",["56","57"],"import React, { Component } from 'react'\nimport axios from 'axios'\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\nimport './Loginbox.css'\n\n\nclass Loginbox extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            username: \"\",\n            password: \"\"\n        }\n        \n        this.handleInputChange = this.handleInputChange.bind(this)\n        this.handleSubmitClick = this.handleSubmitClick.bind(this)\n    }\n\n    handleInputChange(evt) {\n        const { id, value } = evt.currentTarget\n        this.setState({ [id]: value })\n    }\n\n    async handleSubmitClick(evt) {\n        evt.preventDefault()\n        const form = evt.currentTarget.form\n        if(form.reportValidity()) {\n            const url = `http://${window.location.hostname}:3000/signin`\n            const { username, password } = this.state\n            await axios.post(url, { username, password }, {withCredentials: true})\n            .then((res) => {\n                this.setState({ username: \"\", password: \"\" })\n                if(res.data==\"Success\") {\n                    this.props.redirect(\"dashboard\")\n                }\n                else if(res.data==\"Fail\") {\n                    console.log(\"Login Failed as User Not Logged In\")\n                }\n                else {\n                    let message = \"\"\n                    res.data.forEach((err) => {\n                        message += `${err.msg}\\n\\n`\n                    })\n                    alert(`${message}`)\n                }\n            })\n            .catch((err) => {\n                console.log(\"Some error encountered while sending a Signin Request\")\n                console.log(err)\n            })\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"form\">\n                <form>\n                    <h2 className=\"boxtext-center\">LOGIN</h2>\n                    <div className=\"inputdiv\">\n                        <TextField required onChange={this.handleInputChange} value={this.state.username} className=\"forminput\" id=\"username\" label=\"Username\" type=\"text\" />\n                    </div>\n                    <div className=\"inputdiv\">\n                        <TextField required onChange={this.handleInputChange} value={this.state.password} className=\"forminput\" id=\"password\" label=\"Password\" type=\"password\" />\n                    </div>\n                    <div className=\"inputdiv loginbutton\">\n                        <Button onClick={this.handleSubmitClick} size=\"large\" variant=\"contained\" color=\"primary\">Sign In</Button>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default Loginbox","/home/reflxzr/Documents/React/bug-tracker/src/Components/Loginpages/signupbox.js",["58"],"import React, { Component } from 'react'\nimport axios from 'axios'\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Select from '@material-ui/core/Select'\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\nimport './Signupbox.css'\n\nclass Signupbox extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            username: \"\",\n            email: \"\",\n            password: \"\",\n            passwordconfirmation: \"\",\n            role: \"\",\n            passwordsMatch: false\n        }\n\n        this.handleInputChange = this.handleInputChange.bind(this)\n        this.handleRoleMenuChange = this.handleRoleMenuChange.bind(this)\n        this.changePasswordConfStatus = this.changePasswordConfStatus.bind(this)\n        this.handleSubmitClick = this.handleSubmitClick.bind(this)\n    }\n\n    handleInputChange(evt) {\n        const { id, value } = evt.currentTarget\n        this.setState({ [id]: value })\n    }\n\n    handleRoleMenuChange(evt) {\n        this.setState({ role: evt.currentTarget.getAttribute(\"data-value\") })\n    }\n\n    changePasswordConfStatus() {\n        this.setState({ passwordsMatch: false })\n    }\n\n    async handleSubmitClick(evt) {\n        evt.preventDefault()\n        const form = evt.currentTarget.form\n        if(form.reportValidity()) {\n            const url = `http://${window.location.hostname}:3000/signup`\n            let { username, email, password, role, passwordconfirmation } = this.state\n            username = username.replace(\" \", \"\")\n            if(password===passwordconfirmation) {\n                await axios.post(url, {username, email, password, role})\n                .then((res) => {\n                    let message = \"\"\n                    this.setState({ username: \"\", email: \"\", password: \"\", passwordconfirmation: \"\", passwordsMatch: false, role: \"\" })\n                    if(res.data==\"Success\") {\n                        message += \"Sign Up Complete, Proceed to Login\"\n                        this.props.redirect(\"home\")\n                    }\n                    else {\n                        res.data.forEach((err) => {\n                            message += `${err.msg}\\n\\n`\n                        })\n                    }\n\n                    alert(`${message}`)\n                })\n                .catch((err) => {\n                    console.log(\"Signup Request Encountered some Errror\")\n                    console.log(err)\n                })\n            }\n            else {\n                this.setState({ passwordsMatch: true, password: \"\", passwordconfirmation: \"\" })\n            }\n        }\n    }\n\n    render() {\n        return(\n            <div className=\"signupform\">\n                <form>\n                    <h2 className=\"boxtext-center\">SIGN UP</h2>\n                    <div className=\"signupinputdiv\">\n                        <TextField required onChange={this.handleInputChange} value={this.state.username} className=\"signupforminput\" id=\"username\" label=\"Enter a Username\" type=\"text\"/>\n                    </div>\n                    <div className=\"signupinputdiv\">\n                        <TextField required onChange={this.handleInputChange} value={this.state.email} className=\"signupforminput\" id=\"email\" label=\"Enter an Email Address\" type=\"text\" />\n                    </div>\n                    <div className=\"signupinputdiv\">\n                        <TextField required onChange={this.handleInputChange} value={this.state.password} className=\"signupforminput\" id=\"password\" label=\"Enter your Password\" type=\"password\" />\n                    </div>\n                    <div className=\"signupinputdiv\">\n                        <TextField required helperText={this.state.passwordsMatch ? 'Passwords do Not Match' : ''} error={this.state.passwordsMatch} onChange={this.handleInputChange} value={this.state.passwordconfirmation} onClick={this.changePasswordConfStatus} className=\"signupforminput\" id=\"passwordconfirmation\" label=\"Re-Enter your Password\" type=\"password\" />\n                    </div>\n                    <div className=\"signupinputdiv\">\n                        <FormControl required className=\"selectmenu\">\n                            <InputLabel id=\"demo-simple-select-label\">Role</InputLabel>\n                            <Select labelId=\"demo-simple-select-label\" value={this.state.role} onChange={this.handleRoleMenuChange}>\n                                <MenuItem value=\"admin\">Admin</MenuItem>\n                                <MenuItem value=\"projectmanager\">Project Manager</MenuItem>\n                                <MenuItem value=\"developer\">Developer</MenuItem>\n                                <MenuItem value=\"tester\">Tester</MenuItem>\n                            </Select>\n                        </FormControl>\n                    </div>\n                    <div className=\"signupinputdiv signupbutton\">\n                        <Button onClick={this.handleSubmitClick} size=\"large\" variant=\"contained\" color=\"primary\">Sign Up</Button>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default Signupbox","/home/reflxzr/Documents/React/bug-tracker/src/Components/Authentication/auth.js",["59"],{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":2,"column":8,"nodeType":"66","messageId":"67","endLine":2,"endColumn":13},{"ruleId":"64","severity":1,"message":"68","line":3,"column":10,"nodeType":"66","messageId":"67","endLine":3,"endColumn":18},{"ruleId":"69","severity":1,"message":"70","line":11,"column":24,"nodeType":"71","messageId":"72","endLine":11,"endColumn":26},{"ruleId":"64","severity":1,"message":"65","line":2,"column":8,"nodeType":"66","messageId":"67","endLine":2,"endColumn":13},{"ruleId":"69","severity":1,"message":"70","line":38,"column":10,"nodeType":"71","messageId":"72","endLine":38,"endColumn":12},{"ruleId":"69","severity":1,"message":"70","line":41,"column":15,"nodeType":"71","messageId":"72","endLine":41,"endColumn":17},{"ruleId":"69","severity":1,"message":"70","line":34,"column":28,"nodeType":"71","messageId":"72","endLine":34,"endColumn":30},{"ruleId":"69","severity":1,"message":"70","line":37,"column":33,"nodeType":"71","messageId":"72","endLine":37,"endColumn":35},{"ruleId":"69","severity":1,"message":"70","line":54,"column":32,"nodeType":"71","messageId":"72","endLine":54,"endColumn":34},{"ruleId":"69","severity":1,"message":"70","line":7,"column":23,"nodeType":"71","messageId":"72","endLine":7,"endColumn":25},"no-native-reassign",["73"],"no-negated-in-lhs",["74"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]