[{"/home/reflxzr/Documents/React/bug-tracker/src/index.js":"1","/home/reflxzr/Documents/React/bug-tracker/src/reportWebVitals.js":"2","/home/reflxzr/Documents/React/bug-tracker/src/App.js":"3","/home/reflxzr/Documents/React/bug-tracker/src/Components/Dashboard/userdashboard.js":"4","/home/reflxzr/Documents/React/bug-tracker/src/Components/Landingpage/landingpage.js":"5","/home/reflxzr/Documents/React/bug-tracker/src/Components/Navbars/drawerandnavbar.js":"6","/home/reflxzr/Documents/React/bug-tracker/src/Components/Loginpages/passwordreset.js":"7","/home/reflxzr/Documents/React/bug-tracker/src/Components/Loginpages/loginbox.js":"8","/home/reflxzr/Documents/React/bug-tracker/src/Components/Loginpages/signupbox.js":"9","/home/reflxzr/Documents/React/bug-tracker/src/Components/Authentication/auth.js":"10"},{"size":543,"mtime":1614853463672,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1611993292957,"results":"13","hashOfConfig":"12"},{"size":1089,"mtime":1614862944175,"results":"14","hashOfConfig":"12"},{"size":329,"mtime":1612606821159,"results":"15","hashOfConfig":"12"},{"size":2226,"mtime":1612558550426,"results":"16","hashOfConfig":"12"},{"size":4730,"mtime":1612607272341,"results":"17","hashOfConfig":"12"},{"size":1946,"mtime":1614626397090,"results":"18","hashOfConfig":"12"},{"size":2472,"mtime":1614845220302,"results":"19","hashOfConfig":"12"},{"size":5193,"mtime":1614845222038,"results":"20","hashOfConfig":"12"},{"size":441,"mtime":1614861211567,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"us95ny",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"24"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/reflxzr/Documents/React/bug-tracker/src/index.js",[],["46","47"],"/home/reflxzr/Documents/React/bug-tracker/src/reportWebVitals.js",[],"/home/reflxzr/Documents/React/bug-tracker/src/App.js",["48","49"],"import React, { Component } from 'react'\nimport axios from 'axios'\nimport { Redirect, Route, Switch } from 'react-router-dom'\nimport Landingpage from './Components/Landingpage/landingpage'\nimport Userdashboard from './Components/Dashboard/userdashboard'\n// import UserAuthentication from './Components/Authentication/auth'\nimport './App.css'\n\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"landingpage\">\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route exact path=\"/\" component={Landingpage} />\n\t\t\t\t\t<Route exact path=\"/dashboard\" component={async () => {\n\t\t\t\t\t\tconst url = `http://${window.location.hostname}:3000/cookie-session`\n\t\t\t\t\t\tconst result = await axios.get(url, {withCredentials: true})\n\t\t\t\t\t\tconsole.log(result.data==\"Success\")\n\t\t\t\t\t\tif(result.data==\"Success\") {\n\t\t\t\t\t\t\treturn <Userdashboard />\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\treturn <Redirect path=\"/\" />\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// result.data==\"Success\" ? (\n\t\t\t\t\t\t// \t<Userdashboard />\n\t\t\t\t\t\t// ) : (\n\t\t\t\t\t\t// \t<Redirect path=\"/\" />\n\t\t\t\t\t\t// )\n\t\t\t\t\t}} />\n\t\t\t\t</Switch>\n\t\t\t\t{/* <Userdashboard /> */}\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default App;","/home/reflxzr/Documents/React/bug-tracker/src/Components/Dashboard/userdashboard.js",[],"/home/reflxzr/Documents/React/bug-tracker/src/Components/Landingpage/landingpage.js",[],"/home/reflxzr/Documents/React/bug-tracker/src/Components/Navbars/drawerandnavbar.js",[],["50","51"],"/home/reflxzr/Documents/React/bug-tracker/src/Components/Loginpages/passwordreset.js",[],"/home/reflxzr/Documents/React/bug-tracker/src/Components/Loginpages/loginbox.js",[],"/home/reflxzr/Documents/React/bug-tracker/src/Components/Loginpages/signupbox.js",["52"],"import React, { Component } from 'react'\nimport axios from 'axios'\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Select from '@material-ui/core/Select'\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\nimport './Signupbox.css'\n\nclass Signupbox extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            username: \"\",\n            email: \"\",\n            password: \"\",\n            passwordconfirmation: \"\",\n            role: \"\",\n            passwordsMatch: false\n        }\n\n        this.handleInputChange = this.handleInputChange.bind(this)\n        this.handleRoleMenuChange = this.handleRoleMenuChange.bind(this)\n        this.changePasswordConfStatus = this.changePasswordConfStatus.bind(this)\n        this.handleSubmitClick = this.handleSubmitClick.bind(this)\n    }\n\n    handleInputChange(evt) {\n        const { id, value } = evt.currentTarget\n        this.setState({ [id]: value })\n    }\n\n    handleRoleMenuChange(evt) {\n        this.setState({ role: evt.currentTarget.getAttribute(\"data-value\") })\n    }\n\n    changePasswordConfStatus() {\n        this.setState({ passwordsMatch: false })\n    }\n\n    async handleSubmitClick(evt) {\n        evt.preventDefault()\n        const form = evt.currentTarget.form\n        if(form.reportValidity()) {\n            const url = `http://${window.location.hostname}:3000/signup`\n            let { username, email, password, role, passwordconfirmation } = this.state\n            username = username.replace(\" \", \"\")\n            if(password===passwordconfirmation) {\n                await axios.post(url, {username, email, password, role})\n                .then((res) => {\n                    let message = \"\"\n                    this.setState({ username: \"\", email: \"\", password: \"\", passwordconfirmation: \"\", passwordsMatch: false, role: \"\" })\n                    if(res.data==\"Success\") {\n                        message += \"Sign Up Complete, Proceed to Login\"\n                    }\n                    else {\n                        res.data.forEach((err) => {\n                            message += `${err.msg}\\n\\n`\n                        })\n                    }\n\n                    alert(`${message}`)\n                })\n                .catch((err) => {\n                    console.log(\"Signup Request Encountered some Errror\")\n                    console.log(err)\n                })\n            }\n            else {\n                this.setState({ passwordsMatch: true, password: \"\", passwordconfirmation: \"\" })\n            }\n        }\n    }\n\n    render() {\n        return(\n            <div className=\"signupform\">\n                <form>\n                    <h2 className=\"boxtext-center\">SIGN UP</h2>\n                    <div className=\"signupinputdiv\">\n                        <TextField required onChange={this.handleInputChange} value={this.state.username} className=\"signupforminput\" id=\"username\" label=\"Enter a Username\" type=\"text\"/>\n                    </div>\n                    <div className=\"signupinputdiv\">\n                        <TextField required onChange={this.handleInputChange} value={this.state.email} className=\"signupforminput\" id=\"email\" label=\"Enter an Email Address\" type=\"text\" />\n                    </div>\n                    <div className=\"signupinputdiv\">\n                        <TextField required onChange={this.handleInputChange} value={this.state.password} className=\"signupforminput\" id=\"password\" label=\"Enter your Password\" type=\"password\" />\n                    </div>\n                    <div className=\"signupinputdiv\">\n                        <TextField required helperText={this.state.passwordsMatch ? 'Passwords do Not Match' : ''} error={this.state.passwordsMatch} onChange={this.handleInputChange} value={this.state.passwordconfirmation} onClick={this.changePasswordConfStatus} className=\"signupforminput\" id=\"passwordconfirmation\" label=\"Re-Enter your Password\" type=\"password\" />\n                    </div>\n                    <div className=\"signupinputdiv\">\n                        <FormControl required className=\"selectmenu\">\n                            <InputLabel id=\"demo-simple-select-label\">Role</InputLabel>\n                            <Select labelId=\"demo-simple-select-label\" value={this.state.role} onChange={this.handleRoleMenuChange}>\n                                <MenuItem value=\"admin\">Admin</MenuItem>\n                                <MenuItem value=\"projectmanager\">Project Manager</MenuItem>\n                                <MenuItem value=\"developer\">Developer</MenuItem>\n                                <MenuItem value=\"tester\">Tester</MenuItem>\n                            </Select>\n                        </FormControl>\n                    </div>\n                    <div className=\"signupinputdiv signupbutton\">\n                        <Button onClick={this.handleSubmitClick} size=\"large\" variant=\"contained\" color=\"primary\">Sign Up</Button>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default Signupbox","/home/reflxzr/Documents/React/bug-tracker/src/Components/Authentication/auth.js",["53"],{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":18,"column":30,"nodeType":"60","messageId":"61","endLine":18,"endColumn":32},{"ruleId":"58","severity":1,"message":"59","line":19,"column":21,"nodeType":"60","messageId":"61","endLine":19,"endColumn":23},{"ruleId":"54","replacedBy":"62"},{"ruleId":"56","replacedBy":"63"},{"ruleId":"58","severity":1,"message":"59","line":54,"column":32,"nodeType":"60","messageId":"61","endLine":54,"endColumn":34},{"ruleId":"58","severity":1,"message":"59","line":7,"column":23,"nodeType":"60","messageId":"61","endLine":7,"endColumn":25},"no-native-reassign",["64"],"no-negated-in-lhs",["65"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["64"],["65"],"no-global-assign","no-unsafe-negation"]