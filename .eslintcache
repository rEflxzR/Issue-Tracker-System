[{"/home/reflxzr/Documents/React/bug-tracker/src/index.js":"1","/home/reflxzr/Documents/React/bug-tracker/src/reportWebVitals.js":"2","/home/reflxzr/Documents/React/bug-tracker/src/App.js":"3","/home/reflxzr/Documents/React/bug-tracker/src/Components/Dashboard/userdashboard.js":"4","/home/reflxzr/Documents/React/bug-tracker/src/Components/Landingpage/landingpage.js":"5","/home/reflxzr/Documents/React/bug-tracker/src/Components/Navbars/drawerandnavbar.js":"6","/home/reflxzr/Documents/React/bug-tracker/src/Components/Loginpages/passwordreset.js":"7","/home/reflxzr/Documents/React/bug-tracker/src/Components/Loginpages/loginbox.js":"8","/home/reflxzr/Documents/React/bug-tracker/src/Components/Loginpages/signupbox.js":"9","/home/reflxzr/Documents/React/bug-tracker/src/Components/Authentication/auth.js":"10","/home/reflxzr/Documents/React/bug-tracker/src/Components/Loginpages/newpassword.js":"11"},{"size":543,"mtime":1614853463672,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":1611993292957,"results":"14","hashOfConfig":"13"},{"size":629,"mtime":1615221373500,"results":"15","hashOfConfig":"13"},{"size":803,"mtime":1615221390033,"results":"16","hashOfConfig":"13"},{"size":2887,"mtime":1615236076929,"results":"17","hashOfConfig":"13"},{"size":4730,"mtime":1612607272341,"results":"18","hashOfConfig":"13"},{"size":2194,"mtime":1615235745211,"results":"19","hashOfConfig":"13"},{"size":2367,"mtime":1615281093511,"results":"20","hashOfConfig":"13"},{"size":5218,"mtime":1615234879049,"results":"21","hashOfConfig":"13"},{"size":441,"mtime":1615104750471,"results":"22","hashOfConfig":"23"},{"size":3482,"mtime":1615236106743,"results":"24","hashOfConfig":"13"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"us95ny",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"aqx0zs",{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"27"},"/home/reflxzr/Documents/React/bug-tracker/src/index.js",[],["49","50"],"/home/reflxzr/Documents/React/bug-tracker/src/reportWebVitals.js",[],"/home/reflxzr/Documents/React/bug-tracker/src/App.js",[],"/home/reflxzr/Documents/React/bug-tracker/src/Components/Dashboard/userdashboard.js",[],"/home/reflxzr/Documents/React/bug-tracker/src/Components/Landingpage/landingpage.js",[],"/home/reflxzr/Documents/React/bug-tracker/src/Components/Navbars/drawerandnavbar.js",[],"/home/reflxzr/Documents/React/bug-tracker/src/Components/Loginpages/passwordreset.js",[],"/home/reflxzr/Documents/React/bug-tracker/src/Components/Loginpages/loginbox.js",[],"/home/reflxzr/Documents/React/bug-tracker/src/Components/Loginpages/signupbox.js",[],"/home/reflxzr/Documents/React/bug-tracker/src/Components/Authentication/auth.js",["51"],"/home/reflxzr/Documents/React/bug-tracker/src/Components/Loginpages/newpassword.js",["52"],"import React, { Component } from 'react'\nimport axios from 'axios'\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\nimport './Newpassword.css'\n\nclass Newpassword extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            currentPassword: \"\",\n            newPassword: \"\",\n            passwordConfirmation: \"\",\n            passwordsMatch: false\n        }\n\n        this.handleInputChange = this.handleInputChange.bind(this)\n        this.handleSubmitClick = this.handleSubmitClick.bind(this)\n        this.changePasswordConfStatus = this.changePasswordConfStatus.bind(this)\n    }\n\n    handleInputChange(evt) {\n        const { id, value } = evt.currentTarget\n        this.setState({ [id]: value })\n    }\n\n    changePasswordConfStatus() {\n        this.setState({ passwordsMatch: false })\n    }\n\n    async handleSubmitClick(evt) {\n        evt.preventDefault()\n        const form = evt.currentTarget.form\n        if(form.reportValidity()) {\n            const url = `http://${window.location.hostname}:3000/newpassword`\n            const { currentPassword, newPassword, passwordConfirmation } = this.state\n            if(newPassword===passwordConfirmation) {\n                await axios.post(url, { currentPassword, newPassword })\n                .then((res) => {\n                    if(res.data==\"Success\") {\n                        alert(\"Your Password has been Reset Successfully\")\n                        this.props.redirect(\"home\")\n                    }\n                    else {\n                        throw new Error(\"Unable to Set Your Password\")\n                    }\n                })\n                .catch((err) => {\n                    alert(err)\n                })\n            }\n            else {\n                this.setState({ newPassword: \"\", passwordConfirmation: \"\", passwordsMatch: true })\n            }\n        }\n    }\n\n    render() {\n        return(\n            <div className=\"passwordresetform\">\n                <form>\n                    <h2 className=\"boxtext-center\">SET NEW PASSWORD</h2>\n                    <div className=\"passwordresetinputdiv\">\n                        <TextField required onChange={this.handleInputChange} value={this.state.currentPassword} className=\"signupforminput\" id=\"currentPassword\" label=\"Enter Your Current Password\" type=\"password\" />\n                    </div>\n                    <div className=\"passwordresetinputdiv\">\n                        <TextField required onChange={this.handleInputChange} value={this.state.newPassword} className=\"signupforminput\" id=\"newPassword\" label=\"Enter New Password\" type=\"password\" />\n                    </div>\n                    <div className=\"passwordresetinputdiv\">\n                        <TextField required helperText={this.state.passwordsMatch ? 'Passwords do Not Match' : ''} error={this.state.passwordsMatch} onChange={this.handleInputChange} value={this.state.passwordConfirmation} onClick={this.changePasswordConfStatus} className=\"signupforminput\" id=\"passwordConfirmation\" label=\"Re-Enter You New Password\" type=\"password\" />\n                    </div>\n                    <div className=\"passwordresetinputdiv passwordresetbutton\">\n                        <Button onClick={this.handleSubmitClick} size=\"large\" variant=\"contained\" color=\"primary\">RESET PASSWORD</Button>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default Newpassword",{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":7,"column":23,"nodeType":"59","messageId":"60","endLine":7,"endColumn":25},{"ruleId":"57","severity":1,"message":"58","line":40,"column":32,"nodeType":"59","messageId":"60","endLine":40,"endColumn":34},"no-native-reassign",["61"],"no-negated-in-lhs",["62"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]